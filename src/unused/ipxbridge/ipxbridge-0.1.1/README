This is first  attempt to get IPX bridging and routing working
for linux.

This is pre-pre-alpha. This implementation is just to trigger off 
the full fledged development. 

ASSUMPTIONS:
  1. Bridges between only two interfaces : eth0 and eth1. (Hardcoded)
  2. The MTUs of both interfaces should remain equal.

TODO:

IPX bridging:

1. Intelligent bridging
2. Get most functionality into the kernel to minimise overheads 
   (in the style of routing)

IPX routing: 

We are trying to port Mark Bush's <Mark.Bush@comlab.ox.ac.uk>
IPXrouted.tar.gz   to linux. This package is IPX routed implementation
for SUNs. It is available in ftp.comlab.ox.ac.uk archives.

It handles IPX packets all by itself, without requiring any kernel support
from the sun system (i.e. it reads all packets from /dev/nit interface).
Hence, this package cannot make use of IPX sockets which are currently
in the kernel. We will try to eventually adapt this package to make
use of IPX sockets which are currently in the kernel.


Note
=====
We are  still learning... All kinds of suggestions  are welcome.
Are we doing some silly mistakes in network programming?
And allow us to take our own time! 

And anyone there who is interested?

----------------------
Amitay Isaac, project engr., Dept. of Aero Engg. , IIT Bombay INDIA.
amitay@aero.iitb.ernet.in

Vinod G Kulkarni, research scholar, Dept of CSE, IIT Bombay, INDIA.
vinod@cse.iitb.ernet.in

