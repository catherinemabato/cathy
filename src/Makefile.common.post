ifndef OBJS
OBJS=$(CFILES:.c=.o) $(SFILES:.S=.o)
endif

GENOBJS = $(GENSRC:.c=.o)

ifndef DEPENDS
DEPENDS=$(OBJS:.o=.d) $(XSFILES:.s=.d)
endif

GENERATED = $(top_builddir)/src/include/version.hh \
    $(top_builddir)/src/plugin/include/plugin_config.hh \
    $(top_builddir)/src/base/bios/x86/bios_offsets.hh \
    $(top_builddir)/src/base/bios/x86/bios_data.xxd

ifneq ($(GENHDRS),)
GENERATED += $(GENHDRS)
ALL_CPPFLAGS += -iquote .
endif

LIB:=$(BINPATH)/lib/lib$(LIBNAME).a

AR=ar

lib: $(LIB)

$(BINPATH) $(BINPATH)/bin $(BINPATH)/commands $(BINPATH)/lib:
	mkdir -p $@

$(BINPATH)/bat: | $(BINPATH)
	ln -sfT ../src/bindist/bat $@

$(top_builddir)/commands: | $(BINPATH)/commands $(BINPATH)/bat
	rm -rf $@
	mkdir $@
	mkdir $@/dosemu
	ln -sf ../src/bindist/fdppconf.sys $@/fdppconf.sys
	ln -sf ../src/bindist/fdppauto.bat $@/fdppauto.bat
	for i in `ls $(BINPATH)/bat/`; do ln -sfT ../../$(THISVERSION)/bat/$$i $@/dosemu/$$i; done

$(top_builddir)/bin: | $(BINPATH)/bin
	rm -f $@
	ln -sf $(THISVERSION)/bin $@

$(top_builddir)/lib: | $(BINPATH)/lib
	rm -f $@
	ln -sf $(THISVERSION)/lib $@

GIT_REV := $(shell $(REALTOPDIR)/git-rev.sh $(REALTOPDIR) $(top_builddir))
.LOW_RESOLUTION_TIME: $(GIT_REV)
$(top_builddir)/src/include/version.hh: $(top_builddir)/Makefile.conf $(REALTOPDIR)/VERSION $(GIT_REV)
	echo "Updating version.h"; \
	echo "#ifndef	VERSION_HH" > $@; \
	echo "#define	VERSION_HH" >> $@; \
	echo "#define	VERSTR	\"$(PACKAGE_VERSION)\"" >> $@; \
	echo "#define	VERSION_NUM	$(VERSION)" >> $@; \
	echo "#define	SUBLEVEL	$(SUBLEVEL)" >> $@; \
	echo "#define	PATCHLEVEL1	\"$(PATCHLEVEL1)\"" >> $@; \
	echo "#define	REVISION	$(REVISION)" >> $@; \
	echo "#define	VERDATE \"$(RELEASE_DATE)\"" >> $@; \
	echo "#endif /* VERSION_H */" >> $@

$(top_builddir)/src/base/bios/x86/bios_offsets.hh \
    $(top_builddir)/src/base/bios/x86/bios_data.xxd : \
    $(REALTOPDIR)/src/base/bios/x86/bios.s \
    $(top_builddir)/src/include/version.hh
	$(MAKE) -C $(top_builddir)/src/base/bios/x86 SUBDIR=base/bios/x86 $(notdir $@)

$(LIB): $(OBJS) $(GENOBJS) | $(BINPATH)/lib
	rm -f $@
	$(AR) cr $@ $^
	$(RANLIB) $@

.PHONY:	clean realclean lib echo all install default

clean::
	-rm -f $(OBJS) $(LIB) $(GENSRC) $(DEPENDS) $(GENHDRS) configure *~

realclean:: clean
	rm -f $(DEPENDS)
	rm -rf autom4te*.cache
	rm -f Makefile.conf config.log config.status configure aclocal.m4
	rm -rf plugin/include

$(OBJS): $(GENERATED)
$(GENOBJS): $(GENSRC)

%.o: %.c
	$(CC) -c $(ALL_CPPFLAGS) $(ALL_CFLAGS) -o $@ $<

$(XSFILES:.s=.o): %.o: %.s $(top_builddir)/src/include/version.hh
	$(CPP) $(ALL_CPPFLAGS) -x assembler-with-cpp $< | $(XAS) $(XASFLAGS) -o $@

%.o: %.S $(top_builddir)/src/include/version.hh
	$(CPP) $(ALL_CPPFLAGS) -x assembler-with-cpp $< | $(AS) $(ASFLAGS) -o $@

ifndef CLEANING
ifneq "$(wildcard *.d)" ""
-include $(DEPENDS)
endif
endif

$(top_builddir)/Makefile.conf: $(REALTOPDIR)/configure
	cd $(top_builddir) && $(REALTOPDIR)/configure
Makefile.conf: configure
	./configure
configure: configure.ac
	$(REALTOPDIR)/scripts/aconf.sh $(REALTOPDIR) $(srcdir)
.SECONDARY: configure
$(top_builddir)/src/plugin/include/plugin_config.hh:
	cd $(top_builddir) && $(REALTOPDIR)/scripts/mkpluginhooks

# this is mainly for debugging the makefile
echo::
	@echo REALTOPDIR=$(REALTOPDIR)
	@echo TOPDIR=$(TOPDIR)
	@echo LIB=$(LIB)
	@echo DEPENDS=$(DEPENDS)
	@echo OBJS=$(OBJS)
	@echo CFILES = $(wildcard *.c)
	@echo DEPENDS FOUND= $(wildcard *.d)
	@echo MAKEFLAGS=$(MAKEFLAGS)
