#
# (C) Copyright 1992, ..., 2003 the "DOSEMU-Development-Team".
#
# for details see file COPYING in the DOSEMU distribution
#
# Makefile for Linux DOSEMU
#
# You should do a "make" to compile and a "make install" as root to
# install DOSEMU.

INSTALL = install -c
TMP = $(REALTOPDIR)/tmp
SYS = ../commands
dosemudir = $(datadir)/dosemu

PICOBJS = libpic.a
export PICOBJS

export LD=$(CC)
OBJS	= dos.o
DEPENDS = version dos.d emu.d dosstatic.d


ENDOFDOSMEM = 0x110000     # 1024+64 Kilobytes

CFILES=emu.c dos.c $(X2CFILES) dosstatic.c

export USING_NET = -DUSING_NET
ifdef USING_NET
export NET=dosext/net/net
endif

#
# This is defined when the SB Emulation is required. You should re-configure,
# rather than just change this.
#
ifdef USE_SBEMU
export SBEMU=arch/linux/dosext/sound dosext/sound
export MIDID=arch/linux/dosext/sound/midid
endif

#
# This is defined when the CPU emulator is required. You should
# re-configure, rather than just change this.
#
ifdef X86_EMULATOR
export XCPUEMU=emu-i386/simx86
endif

# SYNC_ALOT
#   uncomment this if the emulator is crashing your machine and some debug info 
#   isn't being sync'd to the debug file (stdout). shouldn't happen. :-) 
#SYNC_ALOT = -DSYNC_ALOT=1

REQUIRED += $(MIDID)

LIBSUBDIRS=env/video base base/async \
	arch/linux/async arch/linux/mapping \
	base/misc base/dev/misc\
	emu-i386 $(XCPUEMU) env base/speaker \
	base/dev/pic dosext/dpmi dosext/mfs dosext/misc\
	base/init base/serial base/mouse\
	base/dev/dma \
	$(DEBUGGER) $(NET) $(IPX) $(SBEMU) dosext/drivers base/bios \
	$(PLUGINSUBDIRS)


# call all libraries the name of the directory
LIBS=$(LIBSUBDIRS)

LIBS_ := $(subst /,_,$(LIBS))

DOCS= $(REALTOPDIR)/man


# Relevant to src
OFILES= Makefile Makefile.common ../ChangeLog ../QuickStart \
	../etc/BOGUS-Notes arch/linux/Makefile.main arch/netbsd/Makefile.main \
	../etc/vga.pcf ../etc/vga.bdf ../etc/xtermdos.sh ../etc/xinstallvgafont.sh \
	Configure ../load_module.sh ../unload_module.sh ../install-for-modprobe.sh

BFILES=

F_DOC=dosemu.texinfo Makefile dos.1 wp50
F_DRIVERS=emufs.S emufs.sys
F_COMMANDS=exitemu.S exitemu.com vgaon.S vgaon.com vgaoff.S vgaoff.com \
           lredir.com lredir.c makefile.mak dosdbg.com dosdbg.c
F_EXAMPLES=config.dist
F_PERIPH=debugobj.S getrom hdinfo.c mkhdimage.c mkpartition putrom.c


###################################################################

LIBPATH=lib


OPTIONAL   = # -DDANGEROUS_CMOS=1
CONFIGS    = $(CONFIG_FILE) $(DOSEMU_USERS_FILE)
DEBUG      = $(SYNC_ALOT)


# CFLAGS+=-Werror
# set to use a simpler fork for unix command
# CFLAGS+=-DSIMPLE_FORK
# set to debug fork with environment
# CFLAGS+=-DFORK_DEBUG
CFLAGS += -DDOSEMULIB_DEFAULT=$(dosemudir) -DDOSEMUHDIMAGE_DEFAULT=$(syshdimagedir)

# We need to use the C_RUN_IRQS with -fno-inline (TBD why)
# this is in pic/pic.c
#CFLAGS+=-DC_RUN_IRQS

# use fd3 for soft errors, stderr for hard error, don't ope
# stderr to /dev/null
# CFLAGS+=-DUSE_FD3_FOR_ERRORS

export CFLAGS

DISTBASE=/tmp
DISTNAME=dosemu-$(VERSION).$(SUBLEVEL).$(PATCHLEVEL)
DISTPATH=$(DISTBASE)/$(DISTNAME)
ifdef RELEASE
DISTFILE=$(DISTBASE)/$(DISTNAME).tgz
else
DISTFILE=$(DISTBASE)/pre$(VERSION).$(SUBLEVEL).$(PATCHLEVEL).tgz
endif
export DISTBASE DISTNAME DISTPATH DISTFILE


ifdef do_DEBUG
# first target for debugging build
ifneq (include/config.h,$(wildcard include/config.h))
firstsimple:	version dep simple
endif

simple:	version dossubdirs $(BINPATH)/bin/$(DOSBIN)
endif

# The assumption is that most new users will only type 'make'
# if they have not read the documentation, so therefore a 
# keypress pause is a good idea and is included here.

default: warning2 pausekey version doslibnew \
	../etc/xtermdos ../etc/xinstallvgafont

warning2: 
	@echo ""; \
	 echo "Starting DOSEMU "$(THISVERSION)" compile..."; \
	 echo ""; \
	 echo "-> IMPORTANT!"; \
	 echo "    - Please read 'QuickStart' file before compiling DOSEMU!"; \
	 echo "    - Location and format of DOSEMU files have changed since 0.50pl1!"; \
	 echo ""; \
	 echo "-> REQUIREMENTS for DOSEMU:"; \
	 echo '    - gcc 2.7.2 / egcs >= 2.91.66 / gcc >= 2.95.2'; \
	 echo "    - libc 5.4.46 / glibc-2.0.6pre7 / glibc >= 2.1.3"; \
	 echo '    - Linux >= 2.0.30, 2.1.x >= 2.1.27, 2.x.y, x >= 2'; \
	 echo "";

ifeq ($(WAIT),yes)
pausekey:
	@echo "====> Press Enter to continue, or hit Ctrl-C to abort <===="
	@read
else
pausekey:
	@echo "====> Compile begins <====="
endif

pausedelay:
	@echo "====> HIT CTRL-C NOW to abort if you forgot something! <===="
	@sleep 10

warning3:
	@echo ""; \
	 echo "Be patient...Some of this code may take a while to complete."; \
	 echo "Hopefully you have at least 16MB swap+RAM available during this compile."; \
	 echo ""

doeverything: warning2 pausedelay dep $(DOCS) $(X2CEXE) installnew

most: warning2 pausedelay dep installnew

itall: warning2 pausedelay dep optionalsubdirs $(DOCS) installnew

all:	dosemu

debug:
	rm $(BINPATH)/bin/$(DOSBIN)
	$(MAKE) $(BINPATH)/bin/$(DOSBIN)

dos.o: include/config.h

DOSSTATICFILES = dosstatic.c emu.o base/data.o 

dosstatic:	$(DOSSTATICFILES) ${addsuffix .a,${addprefix lib/lib,$(LIBS_)}}
	$(LD) $(LDFLAGS) -o $@ $(DOSSTATICFILES) \
		$(addprefix -L,$(LIBPATH)) \
		-L. $(addprefix -l, $(LIBS_)) \
		$(PTHREADS) $(SVGALIB) $(SLANGLIB) $(XLIBSW)

../etc/xtermdos:	../etc/xtermdos.sh
	@echo "#!/bin/sh" > ../etc/xtermdos
	@echo >> ../etc/xtermdos
	@echo X11ROOTDIR=$(X11ROOTDIR) >> ../etc/xtermdos
	@echo >> ../etc/xtermdos
	@cat ../etc/xtermdos.sh >> ../etc/xtermdos

../etc/xinstallvgafont:	../etc/xinstallvgafont.sh
	@echo "#!/bin/sh" > ../etc/xinstallvgafont
	@echo >> ../etc/xinstallvgafont
	@echo X11ROOTDIR=$(X11ROOTDIR) >> ../etc/xinstallvgafont
	@echo >> ../etc/xinstallvgafont
	@cat ../etc/xinstallvgafont.sh >> ../etc/xinstallvgafont

$(BINPATH)/bin/$(DOSBIN): emu.o $(LIBSUBDIRS) ${addsuffix .a,${addprefix lib/lib,$(LIBS_)}}
	$(LD) $(LDFLAGS) -o $@ \
	   emu.o $(addprefix -L,$(LIBPATH)) -L. $(SHLIBS) \
	-Wl,--whole-archive $(addprefix -l, $(LIBS_))  -Wl,--no-whole-archive \
	    $(PTHREADS) $(SVGALIB) $(XLIBSW) $(SLANGLIB) -lc 
	@nm $(BINPATH)/bin/$(DOSBIN) | grep -v '\(compiled\)\|\(\.o$$\)\|\( a \)' | \
		sort > $(BINPATH)/bin/dosemu.map
	@ln -sf $(DOSBIN) $(BINPATH)/bin/dos
ifdef X_SUPPORT
	@ln -sf $(DOSBIN) $(BINPATH)/bin/xdos
endif

$(BINPATH)/bin/dosemu: ../dist/dosemu
	sed -e "s|SYSTEM_INSTALL_PATH=NOT_SYSTEM_WIDE|SYSTEM_INSTALL_PATH=$(dosemudir)|" \
	    -e "s|SYSTEM_CONF_PATH=NOT_SYSTEM_WIDE|SYSTEM_CONF_PATH=$(sysconfdir)|" \
	    -e "s|SYSTEM_XFONTS_PATH=NOT_SYSTEM_WIDE|SYSTEM_XFONTS_PATH=$(x11fontdir)|" \
	              ../dist/dosemu > $(BINPATH)/bin/dosemu
	chmod +x $(BINPATH)/bin/dosemu

dosemu: $(BINPATH)/bin/$(DOSBIN) $(BINPATH)/bin/dosemu

dosemu_script: $(BINPATH)/bin/dosemu

.PHONY:	dossubdirs optionalsubdirs docsubdirs
.PHONY: $(LIBSUBDIRS) $(OPTIONALSUBDIRS) $(DOCS) $(REQUIRED)

optionalsubdirs:	$(OPTIONALSUBDIRS)

docsubdirs:	$(DOCS)

$(DOCS) $(OPTIONALSUBDIRS) $(LIBSUBDIRS) $(REQUIRED):
	@(cd $(REALTOPDIR)/src/; $(MAKE) -C $@)

version:	versetup

versetup:
	@mkdir -p $(BINPATH)/bin
	@mkdir -p $(BINPATH)/commands
	@cp -p commands/precompiled/*.{com,exe} $(BINPATH)/commands || true
	@rm -f ../bin ../commands
	@ln -sf $(THISVERSION)/bin ../bin
	@ln -sf $(THISVERSION)/commands ../commands

doslibnew: doslib


doslib: $(REQUIRED) all
	@echo ""
	@echo "---------------------------------DONE compiling-------------------------------"
	@echo ""
	@echo " Now you must install DOSEMU. Make sure you are root and:"
	@echo " make install"
	@echo ""
	@echo ""

installnew: doslib
	$(MAKE) install

install:
	rm -rf $(TMP)
	mkdir -p -m 0755 $(TMP)/dosemu/freedos/dosemu
	if [ ! -d $(dosemudir) ]; then \
	  $(INSTALL) -d $(dosemudir); \
	fi
	if [ ! -d $(syshdimagedir) ]; then \
	  $(INSTALL) -d $(syshdimagedir); \
	fi
	for i in `find $(SYS)/* -type f`; do \
	  $(INSTALL) -m 0644 $$i $(TMP)/dosemu/freedos/dosemu; \
	done
	cd $(SYS); for i in `find * -type l`; do \
	  ln -sf generic.com $(TMP)/dosemu/freedos/dosemu/$$i; \
	done
	cp -a $(TMP)/dosemu/freedos $(dosemudir)
	cd $(TMP)/dosemu; \
	for i in `find freedos -type f` ; do \
	  ln -snf $(dosemudir)/$$i $$i; \
	done
	tar -cf- -C $(TMP) dosemu/freedos | gzip -9 > $(TMP)/dosemu/dosemu-bin.tgz
	$(INSTALL) -m 0644 $(TMP)/dosemu/dosemu-bin.tgz $(dosemudir)
	rm -rf $(TMP)
	mkdir -p -m 0755 $(TMP)/dosemu/freedos/dosemu
	cd $(REALTOPDIR); if [ -f $(fdtarball) ]; then \
	  tar -C $(dosemudir)/.. --no-same-owner -xpzf $(fdtarball); \
	  tar -C $(TMP) --no-same-owner -xpzf $(fdtarball); \
	  cd $(TMP)/dosemu; \
	  rm -f FDchange.log $(dosemudir)/FDchange.log; \
	  rm -f README.bindist $(dosemudir)/README.bindist; \
	  for i in `find freedos -type f | grep -v autoexec.bat | grep -v config.sys` ; do \
	    ln -snf $(dosemudir)/$$i $$i; \
	  done; \
	  $(INSTALL) $(dosemudir)/freedos/config.sys freedos; \
	  $(INSTALL) $(dosemudir)/freedos/autoexec.bat freedos; \
	  cd .. ; tar -cf- dosemu |gzip -9 >$(dosemudir)/dosemu-freedos-bin.tgz; \
	fi
	if [ ! -d $(sysconfdir) ]; then \
	  $(INSTALL) -d $(sysconfdir); \
	fi
	if [ ! -f $(sysconfdir)/dosemu.conf ]; then \
	  $(INSTALL) -m 0644 ../etc/dosemu.conf ../etc/dosemu.users.easy ../etc/dosemu.users.secure $(sysconfdir); \
	  $(INSTALL) -m 0644 ../etc/global.conf $(sysconfdir)/global.conf.example; \
	fi
	if [ ! -d $(dosemudir)/keymap ]; then \
	  $(INSTALL) -d $(dosemudir)/keymap; \
	fi
	$(INSTALL) -m 0644 ../etc/keymap/* $(dosemudir)/keymap; \
	if [ ! -d $(bindir) ]; then \
	  $(INSTALL) -d $(bindir); \
	fi
	$(INSTALL) -m 0755 ../bin/$(DOSBIN) $(bindir)
	$(INSTALL) -m 0755 ../bin/dosemu $(bindir)
	$(INSTALL) -m 0644 ../bin/dosemu.map $(dosemudir)/dosemu-$(THISVERSION).map
	$(INSTALL) -m 0755 ../bin/mkfatimage $(bindir)
	$(INSTALL) -m 0755 ../bin/mkfatimage16 $(bindir)
ifdef USE_SBEMU
	$(INSTALL) -m 0755 ../bin/midid $(bindir)
endif
ifdef  USE_MHPDBG
	$(INSTALL) -m 0755 ../bin/dosdebug $(bindir)
endif
	if [ ! -d $(docdir) ]; then \
	  $(INSTALL) -d $(docdir); \
	fi
	$(INSTALL) -m 0644 ../README.bindist $(docdir)
	$(INSTALL) -m 0644 ../doc/{README,README-tech,dosemu-HOWTO,sound-usage}.txt \
	   ../doc/announce $(docdir)
	if [ ! -d $(mandir)/man1 ]; then \
	  $(INSTALL) -d $(mandir)/man1; \
	fi
	$(INSTALL) -m 0644 ../man/{mkfatimage16,dosemu,dosemu.bin,dosdebug}.1 \
	   $(mandir)/man1
	ln -sf dosemu.1 $(mandir)/man1/xdosemu.1
ifdef X_SUPPORT
	if [ ! -e $(bindir)/xdosemu ]; then ln -s dosemu $(bindir)/xdosemu; fi
	if [ ! -d $(x11fontdir) ]; then \
	  $(INSTALL) -d $(x11fontdir); \
	fi
	if [ -w $(x11fontdir) ] && \
	    [ ! -e $(x11fontdir)/vga.pcf ] && \
	    [ ! -e $(x11fontdir)/vga.pcf.Z ] && \
	    [ ! -e $(x11fontdir)/vga.pcf.gz ]; then \
		echo "-> Main DOSEMU files installation done. Installing the X PC fonts..."; \
		$(INSTALL) -m 0644 ../etc/vga.pcf $(x11fontdir); \
		gzip -9 $(x11fontdir)/vga.pcf; \
		bdftopcf ../etc/vga11x19.bdf | gzip -c -9 > $(x11fontdir)/vga11x19.pcf.gz; \
		bdftopcf ../etc/vga-cp866.bdf | gzip -c -9 > $(x11fontdir)/vga-cp866.pcf.gz; \
		bdftopcf ../etc/vga10x20-cp866.bdf | gzip -c -9 > $(x11fontdir)/vga10x20-cp866.pcf.gz; \
		chmod 0644 $(x11fontdir)/vga11x19.pcf.gz $(x11fontdir)/vga-cp866.pcf.gz $(x11fontdir)/vga10x20-cp866.pcf.gz; \
		if [ ! -f $(x11fontdir)/fonts.alias ]; then \
		  $(INSTALL) -m 0644 ../etc/dosemu.alias $(x11fontdir)/fonts.alias; \
		elif [ grep ^vga $(x11fontdir)/fonts.alias ]; then \
	          cat ../etc/dosemu.alias >> $(x11fontdir)/fonts.alias; \
		fi; \
		cd $(x11fontdir); \
		mkfontdir; \
	fi;
endif
	/bin/rm -rf $(TMP)
	@cd $(REALTOPDIR); if test $(fdtarball) != none -a ! -f $(fdtarball); then \
	  echo ; \
	  echo WARNING ;\
	  echo No FreeDOS tarball \($(fdtarball)\) found. If you are not ;\
	  echo upgrading a working existing installation then please download one ;\
	  echo from http://www.dosemu.org and re-run "make install".; \
	  echo You can also use this procedure to upgrade an existing *FreeDOS*; \
	  echo installation when a new tarball is available.; \
	  echo Alternatively you can set fdtarball to none in compiletime-settings; \
	  echo and use another DOS, which can be installed using dosemu -install; \
	  echo or referred to using \$$_hdimage in your dosemu.conf or .dosemurc.; \
	fi
	@echo ""; \
	 echo "---------------------------------DONE Installing-------------------------------"; \
	 echo ""; \
	 echo "  - You can type 'dosemu' to run DOSEMU. If you installed the FreeDOS tarball"; \
	 echo "    too (see the warning above), then DOSEMU will set up a directory structure"; \
	 echo "    in your home directory when you run it for the first time."
ifdef X_SUPPORT
	@echo "  - Use 'xdosemu' instead of 'dosemu' to cause DOSEMU to open its own Xwindow."; \
	 echo "  - Type 'xset fp rehash' before running 'xdosemu' for the first time ever."; \
	 echo "  - If your backspace and delete key do not work properly in 'xdosemu', try:"; \
	 echo "		xmodmap -e \"keycode 107 = 0xffff\""; \
	 echo "		xmodmap -e \"keycode 22 = 0xff08\""; \
	 echo "		xmodmap -e \"key 108 = 0xff0d\"  [Return = 0xff0d]"; \
	 echo "  - An icon for use with your favourite window manager is at"; \
	 echo "    $(REALTOPDIR)/etc/dosemu.xpm"
endif
	@echo "  - Try emumouse.exe -r if your INTERNAL mouse won't work"; \
	 echo "  - Try unix.exe to run a Unix command under DOSEMU"; \
	 echo -e "\n  NOTE: DOSEMU is no longer installed suid-root by default!"; \
	 echo -e   "        If you need it (NOT recommended), do a 'chmod u+s $(bindir)/$(DOSBIN)'"; \
	 echo "See the QuickStart file for additional information."; \
	 echo ""


converthd: hdimage
	mv hdimage hdimage.preconvert
	periph/mkhdimage -h 4 -s 17 -c 40 | cat - hdimage.preconvert > hdimage
	@echo "Your hdimage is now converted and ready to use with 0.52 and above!"

newhd:  tools/periph/bootsect
	tools/periph/mkhdimage -h 4 -s 17 -c 40 | cat - tools/periph/bootsect > newhd
	@echo "You now have a hdimage file called 'newhd'"

include $(REALTOPDIR)/src/Makefile.common

checkin::
	-ci -l -M $(CFILES) $(HFILES) $(SFILES) $(OFILES)
	@for i in $(LIBS) ; do (cd $$i && echo $$i && $(MAKE) checkin) || exit; done

checkout::
	-co -M -l $(CFILES) $(HFILES) $(SFILES) $(OFILES)
	@for i in $(LIBS) ; do (cd $$i && echo $$i && $(MAKE) checkout) || exit; done

dist:: $(CFILES) $(HFILES) $(SFILES) $(OFILES) $(BFILES) include/config.h
	install -d $(DISTPATH)
	install -d $(DISTPATH)/lib
	cp -a dosemu.xpm libslang.a $(CFILES) $(HFILES) $(SFILES) $(OFILES) $(BFILES) $(DISTPATH)
	cp -a hdimages/hdimage.dist $(DISTPATH)/hdimage.dist
	@for i in $(REQUIRED) $(LIBS) $(DOCS) ipxutils $(OPTIONALSUBDIRS); do \
	    (cd $$i && echo $$i && $(MAKE) dist) || exit; \
	done
	(cd $(DISTBASE); tar cf - $(DISTNAME) | gzip -9 >$(DISTFILE))
	rm -rf $(DISTPATH)
	@echo "FINAL .tgz FILE:"
	@ls -l $(DISTFILE)

local_clean:
	-rm -f $(OBJS) $(X2CEXE) $(BINPATH)/bin/$(DOSBIN) $(BINPATH)/bin/xdos \
	  $(BINPATH)/bin/dos $(BINPATH)/bin/libdosemu *.s core \
	  dosstatic *.tmp $(BINPATH)/bin/dosemu.map *.o $(BINPATH)/bin/dosdebug

local_realclean:
	-rm -f tools/tools86 .depend

clean::	local_clean

realclean::   local_realclean local_clean

DIRLIST=$(REQUIRED) $(DOCS) $(LIBS) $(OPTIONALSUBDIRS)
CLEANDIRS=$(addsuffix .clean, $(DIRLIST))
REALCLEANDIRS=$(addsuffix .realclean, $(DIRLIST))

clean:: $(CLEANDIRS)

realclean:: $(REALCLEANDIRS)

.PHONY: $(CLEANDIRS)
$(CLEANDIRS):
	-@$(MAKE) -C $(subst .clean,,$@) clean CLEANING=true

.PHONY: $(REALCLEANDIRS)
$(REALCLEANDIRS):
	-@$(MAKE) -C $(subst .realclean,,$@) realclean CLEANING=true



pristine:	realclean
	-mv lib/libarch_*slang*.a .
	-rm -f lib/*
	-mv libarch_*slang*.a lib
	-rm -rf $(BINPATH) ../bin ../commands ../etc/xtermdos ../etc/xinstallvgafont
	-rm -rf ../testboot

# DEPENDS=dos.d emu.d 
# this is to do make subdir.depend to make a dependency
DEPENDDIRS=$(addsuffix .depend, $(LIBSUBDIRS) )

depend_local:	$(DEPENDS)

depend dep:  version $(DEPENDDIRS) depend_local
	$(CPP) -MM $(CFLAGS) $(CFILES) > .depend

.PHONY:       size
size:
	size ./dosstatic  >>size
	ls -l dosstatic  >>size

.PHONY: $(DEPENDDIRS)

$(DEPENDDIRS):
	$(MAKE) -C $(subst .depend,,$@) depend


.PHONY: help
help:
	@echo "The following targets will do make depends:"; \
	 echo "     $(DEPENDDIRS)"; \
	 echo "Each .c file has a corresponding .d file (the dependencies)"; \
	 echo ""; \
	 echo ""; \
	 echo "'make dossubdirs' will make the follow targets:"; \
	 echo "     $(LIBSUBDIRS)"; \
	 echo ""; \
	 echo "To clean a directory, do make -C <dirname> clean|realclean"

echo::
	@echo LIBS_=$(LIBS_)
	for i in $(LIBSUBDIRS); do \
		$(MAKE) -C $$i $@  || exit 1; \
	done

#
# include a dependency file if one exists
#
ifeq (.depend,$(wildcard .depend))
include .depend
endif
