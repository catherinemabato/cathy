Notes about system-wide installation
====================================

As of DOSEMU-1.0.2 DOSEMU is not longer installed suid-root by default.
Running DOSEMU suid-root is not (and never was) recommended on net-connected
machines, hence, whoever really wants to do it should fiddle with the problems
himself.

By default, every user has its own copy/instance of DOS 'somewhere' 
(default is $HOME/dosemu/freedos), which consists of symbolic links 
to shared DOS files or is completely private. THis way each user has 
full write access to the C: drive, which is what is normally expected 
in a DOSish environment.

The systemwide install, "make install" keeps the DOSEMU binaries, 
the docs and the templates to generate the user's private
DOSEMU instance on demand. Whenever a the script [x]dosemu (of such a
systemwide install) is called by a user who has no private instance yet,
the script does the install (essentially, it unpacks tarballs which
consist of symbolic links and a few small files) before it launches DOS. 

This systemwide installation can be created as follows:

  - in addition to the DOSEMU source distribution you first have
    to download at least the file dosemu-freedos-bin.tgz from dosemu.org
    (this contains a bootable collection of suitable FreeDos binaries).

  - adjust the paths in compiletime-settings and compile the DOSEMU 
    source as follows: 

    $ cd /where/you/unpacked/the/dosemu/source/dosemu-<version>
    $ make
    $ su -
    # make install
    
where you can also pack the result into a RPM or what ever package format 
you like.

If you upgrade an existing DOSEMU or dosemu-freedos tarball then this
this change will have an immediate effect on all users,
because the user's private instances will have symlinks to the
commonly used DOS binaries.

Some final note: It may be better to link static. Keep in mind, that DOSEMU
can run much better when linked statically, this (among other) has to do
with the more compact address space spanned by statically linked binaries
(more TLB hits, less reloads) and the enormous number of kernel-/user-
space transitions DOSEMU needs to do. Hence, even if static binaries
under glibc >= 2.2 are no longer strictly portable between systems,
you may get a better performing DOSEMU. You may argue performance
not to be important, maybe, but DOSEMU's dynamic behavior can change
dramatically when missing to 'hit the slot', resulting in malfunction
of the DOS application, which expects to 'own' the whole machine'.
There is, however, some problem with static linkage under glibc together
with gethostname() as called by XOpenDisplay() on remote X. This problem
(silent crash) can be solved by always having nscd running on the remote
system.
 

			--Hans <lermen@fgan.de>, 2001/05/30
			--Bart Oldeman, 2002/12/17
