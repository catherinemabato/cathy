diff -urN dosc10b2.orig/hdr/dosemu.h dosc10b2/hdr/dosemu.h
--- dosc10b2.orig/hdr/dosemu.h	Thu Jan  1 01:00:00 1970
+++ dosc10b2/hdr/dosemu.h	Sat Jul  3 18:55:10 1999
@@ -0,0 +1,10 @@
+
+#define DOSEMU_COMPAT_VERSION	1
+#define E6_INT2f11	0x2f11
+
+extern int dosemu_generic(int mode, ...);
+extern unsigned long dosemu_notify(unsigned short built_version);
+
+#define dosemu_int2f_111e(origAX,r) \
+	dosemu_generic(E6_INT2f11, 0x111e, (char FAR *)r, origAX)
+
diff -urN dosc10b2.orig/src/kernel/dosemu.asm dosc10b2/src/kernel/dosemu.asm
--- dosc10b2.orig/src/kernel/dosemu.asm	Thu Jan  1 01:00:00 1970
+++ dosc10b2/src/kernel/dosemu.asm	Sun Jul  4 19:15:10 1999
@@ -0,0 +1,121 @@
+;
+; File:
+;			    dosemu.asm
+; Description:
+;	 	       DOSEMU support code
+;
+;		     Copyright (c) 1996, 1998
+;			Pasquale J. Villani
+;			and Hans Lermen
+;			All Rights Reserved
+;
+; This file is part of DOS-C.
+;
+; DOS-C is free software; you can redistribute it and/or
+; modify it under the terms of the GNU General Public License
+; version 2 as published by the Free Software Foundation.
+;
+; DOS-C is distributed in the hope that it will be useful, but
+; WITHOUT ANY WARRANTY; without even the implied warranty of
+; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
+; the GNU General Public License for more details.
+;
+; You should have received a copy of the GNU General Public
+; License along with DOS-C; see the file COPYING.  If not,
+; write to the Free Software Foundation, 675 Mass Ave,
+; Cambridge, MA 02139, USA.
+;
+;
+
+		page	60,132
+		title	DOSEMU interface
+
+IFDEF ??version
+_TEXT		segment	byte public 'CODE'
+DGROUP		group	_DATA,_BSS,_BSSEND		; small model
+		assume	cs:_TEXT,ds:DGROUP,ss:DGROUP
+_TEXT		ends
+
+_DATA		segment word public 'DATA'
+_DATA		ends
+
+_BSS		segment word public 'BSS'
+_BSS		ends
+
+_BSSEND		segment byte public 'STACK'
+_BSSEND		ends
+
+ELSE
+_TEXT		segment	byte public 'CODE'
+_TEXT		ends
+
+_DATA		segment word public 'DATA'
+_DATA		ends
+
+CONST		segment word public 'CONST'
+CONST		ends
+
+_BSS		segment word public 'BSS'
+_BSS		ends
+
+_BSSEND		segment byte public 'STACK'
+_BSSEND		ends
+
+DGROUP		group	CONST,_DATA,_BSS,_BSSEND	; small/tiny model
+		assume	ds:DGROUP, ss:DGROUP
+ENDIF
+
+
+_TEXT		segment	byte public 'CODE'
+		assume	cs:_TEXT
+
+;
+;	unsigned long dosemu_notify(unsigned short built_version)
+;
+;	Tells DOSEMU to be DosC aware,
+;	returns the current DOSEMU-version-code (format 0xMMmmPPpp)
+;
+		public	_dosemu_notify
+_dosemu_notify	proc	near
+		push	bp		; Standard C entry
+		mov	bp,sp
+		mov	bx,[bp+4]	; internal version (built)
+		mov     ax,0dcdch
+		xor	dx,dx
+		int	0e6h
+		cmp	ax,0dcdch
+		jne	short notify_ex
+		or	dx,dx
+		jne	short notify_ex
+		xor	ax,ax
+		mov	byte ptr cs:have_dosemu,0
+notify_ex:
+		pop	bp
+		ret
+_dosemu_notify	endp
+
+
+;
+; This is the DOSEMU helper generic entry, it simply issues the INTe6
+; and leaves all work to the 32-bit DOSEMU code.
+; It should be used this way:
+;
+; All arguments are taken from the callers stack direcly by dosemu
+;
+; int dosemu_generic(int mode, ...);
+;
+		public  _dosemu_generic
+_dosemu_generic	proc	near
+		cmp	byte ptr cs:have_dosemu,0
+		jz	short generic_ex
+		mov	ax,01dch
+		int	0e6h
+generic_ex:
+		ret
+_dosemu_generic	endp
+
+have_dosemu	db	1
+
+_TEXT		ends
+
+		end
diff -urN dosc10b2.orig/src/kernel/globals.h dosc10b2/src/kernel/globals.h
--- dosc10b2.orig/src/kernel/globals.h	Sun Dec  6 17:45:56 1998
+++ dosc10b2/src/kernel/globals.h	Thu Dec 31 13:35:01 1998
@@ -416,9 +416,9 @@
 
 extern BYTE
 	TempBuffer[],           /* Temporary general purpose buffer     */
-	FAR *internal_data,     /* sda areas                            */
-	FAR *swap_always,       /*  "    "                              */
-	FAR *swap_indos,        /*  "    "                              */
+	internal_data[],        /* sda areas                            */
+	swap_always[],          /*  "    "                              */
+	swap_indos[],           /*  "    "                              */
 	tsr,                    /* true if program is TSR               */
 	break_flg,              /* true if break was detected           */
 	break_ena,              /* break enabled flag                   */
diff -urN dosc10b2.orig/src/kernel/inthndlr.c dosc10b2/src/kernel/inthndlr.c
--- dosc10b2.orig/src/kernel/inthndlr.c	Sun Dec  6 17:47:38 1998
+++ dosc10b2/src/kernel/inthndlr.c	Sun Jan  3 01:36:31 1999
@@ -29,6 +29,7 @@
 
 #include "../../hdr/portab.h"
 #include "globals.h"
+#include "../../hdr/dosemu.h"
 
 #ifdef VERSION_STRINGS
 BYTE *RcsId = "$Header:   C:/usr/patv/dos-c/src/kernel/inthndlr.c_v   1.14   06 Dec 1998  8:47:38   patv  $";
@@ -628,7 +629,6 @@
 
 	/* Get DOS Version                                              */
 	case 0x30:
-		r -> AL = os_major;
 		r -> AH = os_minor;
 		
 		switch(r -> AL)
@@ -642,6 +642,7 @@
 			r -> BH = 0;    /* RAM only for now             */
 			break;
 		}
+		r -> AL = os_major;
 		r -> BL = 0xff;         /* for now                      */
 		r -> CX = 0xffff;
 		break;
@@ -1230,6 +1231,21 @@
 			r -> FLAGS &= ~FLG_CARRY;
 			break;
 
+		default:
+			goto error_invalid;
+		}
+
+	case 0x5f:	/* Network support */
+		switch(r -> AL)
+		{
+		case	0x00:
+		case	0x01:
+		case	0x02:
+		case	0x03:
+		case	0x04:
+		case	0x05:
+		case	0x06:	/* GET REDIRECTION MODE */
+			dosemu_int2f_111e(r, r->AX);
 		default:
 			goto error_invalid;
 		}
diff -urN dosc10b2.orig/src/kernel/kernel.mak dosc10b2/src/kernel/kernel.mak
--- dosc10b2.orig/src/kernel/kernel.mak	Sun Dec  6 17:45:40 1998
+++ dosc10b2/src/kernel/kernel.mak	Sat Jul  3 19:27:33 1999
@@ -133,6 +133,7 @@
  asmsupt.obj \
  execrh.obj \
  nlssupt.obj \
+ dosemu.obj \
  procsupt.obj
 
 #               *Explicit Rules*
@@ -203,6 +204,7 @@
 asmsupt.obj+
 execrh.obj+
 nlssupt.obj+
+dosemu.obj+
 procsupt.obj
 kernel          # exe file
 kernel          # map file
@@ -246,11 +248,11 @@
 
 initoem.obj: kernel.cfg initoem.c globals.h
 
-inthndlr.obj: kernel.cfg inthndlr.c globals.h
+inthndlr.obj: kernel.cfg inthndlr.c globals.h ../../hdr/dosemu.h
 
 ioctl.obj: kernel.cfg ioctl.c globals.h
 
-main.obj: kernel.cfg main.c globals.h
+main.obj: kernel.cfg main.c globals.h ../../hdr/dosemu.h
 
 config.obj: kernel.cfg config.c globals.h
 
@@ -296,6 +298,9 @@
 
 nlssupt.obj: kernel.cfg nlssupt.asm 
 	$(ASM) $(AFLAGS) nlssupt,,;
+
+dosemu.obj: kernel.cfg dosemu.asm 
+	$(ASM) $(AFLAGS) dosemu,,;
 
 procsupt.obj: kernel.cfg procsupt.asm 
 	$(ASM) $(AFLAGS) PROCSUPT,,;
diff -urN dosc10b2.orig/src/kernel/main.c dosc10b2/src/kernel/main.c
--- dosc10b2.orig/src/kernel/main.c	Sun Dec  6 17:45:30 1998
+++ dosc10b2/src/kernel/main.c	Sat Jul  3 18:55:04 1999
@@ -32,6 +32,7 @@
 #define MAIN
 #include "../../hdr/portab.h"
 #include "globals.h"
+#include "../../hdr/dosemu.h"
 
 /* $Logfile:   C:/usr/patv/dos-c/src/kernel/main.c_v  $ */
 #ifdef VERSION_STRINGS
@@ -91,6 +92,11 @@
 VOID 
 main (void)
 {
+	union {
+		unsigned long dosemu_version_code;
+		char v[4];
+	} dv;
+	dv.dosemu_version_code = dosemu_notify(BUILD);
 #ifdef KDB
 	BootDrive = 1;
 #endif
@@ -100,6 +106,10 @@
         printf("KERNEL: Boot drive = %c\n", 'A' + BootDrive - 1);
 #endif
         signon();
+	if (dv.dosemu_version_code) {
+		printf("Running dosemu-%d.%d.%d.%d compatibility, DosC patch %d\n",
+		   dv.v[3], dv.v[2], dv.v[1], dv.v[0], DOSEMU_COMPAT_VERSION);
+	}
         kernel();
 }
 
