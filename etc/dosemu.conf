##############################################################################
# ( this file is /etc/dosemu.conf )
#
# Linux dosemu  configuration  for parser versions >= 3 (dosemu-0.97.0.1)
#
# ./doc/README.txt (chapter 2.) contains a description of the syntax
# and the usage of dosemu.conf.
#
# NOTES:
#
# 1. On the top part of this file (dosemu.conf) there is a section marked
#
#      #### GLOBAL_SETTINGS_START
#                                 ... editable contents
#      #### GLOBAL_SETTINGS_STOP
#
#    which as a 'global section' contains variable settings, that are used
#    in the rest of this file for doing the most reasonable configuration.
#    This section is the only part of dosemu.conf that gets updated by
#    the menu driver 'setup-dosemu' tool.
#
# 2. We recommend you to EDIT ONLY the 'global section'.
#    If you change anything other than GLOBAL_SETTINGS_START...STOP line,
#    you are at your own and could break 'setup-dosemu'.
#    
# This file (etc/dosemu.conf) may also serve as an example file for
#      .dosrc            ( user configuration file )
#      option -I         ( configuration via commandline, see man/dos.1 )
#
# Access rights are defined in
#
#      /etc/dosemu.users
#
##############################################################################


ifndef parser_version_3
  abort '
  **** Your are running the wrong dosemu.conf               
  **** This one is only for newer DOSEMUs >= version 0.97.0.1
  '
else
  # we are on version 3 parser
  ## we first set some vital variable

  $CONFIG_VERSION = ( (0 << 24) | (97 << 16) | (0 << 8) | 1)
  #                    ^           ^^           ^         ^

  if ( $DOSEMU_VERSION_CODE < $CONFIG_VERSION )
    abort "sorry, your /etc/dosemu.conf doesn't match this dosemu version"
  endif

  #########################################################################
  #### GLOBAL_SETTINGS_START ##############################################

  # Notes for editing this section:
  #
  #   In    $_xxx = (n)    n is a numerical or boolean value
  #                  =     =
  #   In    $_zzz = "s"    s is a string
  #
  # Please edit only beteen the brakets and quotes and keep the rest intact.
  #        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^

  $_debug = "-a"	# same format as -D commandline option
			# (but without the -D in front)
  $_hogthreshold = (1)	# 0 == all CPU power to DOSEMU
  $_timint = (on)	# emulate INT08 type timer interrupts

  $_term_char_set = ""	# empty == automatic, else 'ibm' or 'latin'
  $_term_color = (on)	# terminal with color support
  $_term_updfreq = (4)	# time between refreshs (units: 20 == 1 second)
  $_escchar = (30)	# 30 == Ctrl-^, special-sequence prefix

  $_rawkeyboard = (0)	# bypass normal keyboard input, maybe dangerous
  $_layout = "us"	# one of: finnish(-latin1), de(-latin1), be, it, us
			# uk, dk(-latin1), keyb-no, no-latin1, dvorak, po
			# sg(-latin1), fr(-latin1), sf(-latin1), es(-latin1)
			# sw, hu(-latin2), hu-cwi, keyb-user
  $_keybint = (on)	# emulate PCish keyboard interrupt


  $_X_updfreq = (5)	# time between refreshs (units: 20 == 1 second)
  $_X_title = "DOS in a BOX"	# Title in the top bar of the window
  $_X_icon_name = "xdos"	# Text for icon, when minimized
  $_X_keycode = (off) 	# on == translate keybord via dosemu keytables
  $_X_blinkrate = (8)	# blink rate for the cursor
  $_X_font = ""		# basename from /usr/X11R6/lib/X11/fonts/misc/*
			# (without extension) e.g. "vga"
  $_X_mitshm = (on)	# Use shared memory extensions
  $_X_sharecmap = (off)	# share the colormap with other applications
  $_X_fixed_aspect = (on)	# Set fixed aspect for resize the graphics window
  $_X_aspect_43 = (on)	# Always use an aspect ratio of 4:3 for graphics
  $_X_lin_filt = (off)	# Use linear filtering for >15 bpp interpolation
  $_X_bilin_filt = (off)	# Use bi-linear filtering for >15 bpp interpolation
  $_X_mode13fact = (2)	# initial size factor for video mode 0x13 (320x200)
  $_X_winsize = ""	# "x,y" of initial windows size (defaults to float)
  $_X_gamma = (1.0)	# gamma correction
  $_X_vgaemu_memsize = (1024) # size (in Kbytes) of the frame buffer for emulated vga
  $_X_lfb = (on)	# use linear frame buffer in VESA modes
  $_X_pm_interface = (on)	# use protected mode interface for VESA modes
  $_X_vesamode = ""	# "xres,yres ... xres,yres"
			# List of vesamodes to add. The list has to
			# comma separated "xres,yres" pairs

  $_mathco = (on)	# or off
  $_cpu = (80386)	# CPU emulation, valid values:  80[345]86
  $_xms = (1024)	# in Kbyte
  $_ems = (1024)	# in Kbyte
  $_ems_frame = (0xe000)
  $_dpmi = (off)	# in Kbyte
  $_dosmem = (640)	# in Kbyte, < 640
  $_secure ="ngd"	# secure for: n (normal users), g (guest), d (dexe)
			# empty string: depending on 'restricted'

  $_emusys = ""		# empty or 3 char., config.sys   -> config.XXX
  $_emubat = ""		# empty or 3 char., autoexec.bat -> autoexec.XXX 
  $_emuini = ""		# empty or 3 char., system.ini   -> system.XXX

  $_odd_hosts = ""	# black list such as "lucifer.hell.com billy.the.cat"
  $_diskless_hosts=""	# black list such as "hacker1 newbee gateway1"


  $_video = "vga"	# one of: plainvga, vga, ega, mda, mga, cga
  $_console = (0)	# use 'console' video
  $_graphics = (0)	# use the cards BIOS to set graphics
  $_vbios_seg = (0xc000)	# set the address of your VBIOS (e.g. 0xe000)
  $_vbios_size = (0x10000)# set the size of your BIOS (e.g. 0x8000)
  $_vmemsize = (1024)	# size of regen buffer
  $_chipset = ""	# one of: plainvga, trident, et4000, diamond, avance
			# cirrus, matrox, wdvga, paradise
  $_dualmon = (0)	# if you have one vga _plus_ one hgc (2 monitors)


  $_vbootfloppy = ""	# if you want to boot from a virtual floppy:
			# file name of the floppy image under /var/lib/dosemu
  $_floppy_a = "threeinch"# or "fiveinch" or empty, if not existing
  $_floppy_b = ""	# dito for B:

  $_hdimage = "hdimage.first"	# list of hdimages under /var/lib/dosemu
				# assigned in this order such as
				# "hdimage_c hdimage_d hdimage_e"
  $_hdimage_r = $_hdimage	# hdimages for 'restricted access (if different)


  $_irqpassing = ""	# list of IRQ number (2-15) to pass to DOS such as
			# "3 8 10"

  $_com1 = ""		# e.g. "/dev/mouse" or "/dev/cua0"
  $_com2 = ""		# e.g. "/dev/modem" or "/dev/cua1"

  $_mouse = ""		# one of: microsoft, mousesystems, logitech, mmseries
			# mouseman, hitachi, busmouse, ps2
  $_mouse_dev = ""	# one of: com1, com2 or /dev/mouse
  $_mouse_flags = ""	# list of none or one or more of:
			# "emulate3buttons cleardtr"
  $_mouse_baud = (0)	# baudrate, 0 == don't set

  $_speaker = ""	# or "native" or "emulated"
  $_printer = "lp"	# name of (/etc/printcap) printer to appear as LPT1
  $_printer_timeout = (20)# idle time in seconds before spooling out

  $_ports = ""		# list of portnumbers such as "0x1ce 0x1cf 0x238"
			# or "0x1ce range 0x280,0x29f 310"
			# or "range 0x1a0,(0x1a0+15)"

  $_ipxsupport = (off)	# or on
  $_novell_hack = (off)

  $_sound = (off)		# sound support on/off
  $_sb_base = (0x220)
  $_sb_irq = (5)
  $_sb_dma = (1)
  $_sb_dsp = "/dev/dsp"
  $_sb_mixer = "/dev/mixer"
  $_mpu_base = "0x330"


  #### GLOBAL_SETTINGS_STOP  ##############################################
  #### --------------------  ##############################################
  #### ( if you are reasonable, you wont edit below this line ) ###########
  #########################################################################

  $LIST_DELIM = " ,	"	#delimiters for lists <tab>, blank, comma

  if (strlen($_debug))
    debug $__debug ;
  else
    debug { off }
  endif

  dosbanner on
  timint $_timint
  mathco $_mathco
  cpu $_cpu
  xms $_xms
  if ($_ems) ems { ems_size $_ems ems_frame $_ems_frame } else ems off endif
  dosmem $_dosmem

  if ($_emusys ne "") emusys $_emusys endif
  if ($_emubat ne "") emubat $_emubat endif
  if ($_emuini ne "") emuini $_emuini endif

  $DISABLE_MOUSE = (0)
  $DISABLE_SERIAL = (0)

  ## terminal stuff, we check a lot to insure proper operation

  $BEING_ON = ""
  $USING_X = (0)
  $REMOTE_HOST = ""

  $xxx = shell("who am i")
  if ( strlen($xxx) && strchr($xxx, "(" ) < 0 ))
    $BEING_ON = "console"
  else
    if (strstr($xxx, "(:") < 0)
      $BEING_ON = "remote"
      $REMOTE_HOST = strsplit($xxx, strchr($xxx,"(")+1,99)
      $REMOTE_HOST = strdel($REMOTE_HOST, strchr($REMOTE_HOST,")"),99)
    else
      $BEING_ON = ""
    endif
    if ($TERM eq "xterm")
      $BEING_ON = $BEING_ON, "_xterm"
      if ( (strchr($DOSEMU_OPTIONS,"X") >=0) && ($DISPLAY ne "") )
        $USING_X = (1)
      endif
    else
      if (strstr("linux console", $TERM) < 0)
        # remote side must be some type of real terminal
        $BEING_ON = $BEING_ON, "_terminal"
      else
        # remote side is a Linux console
        $BEING_ON = $BEING_ON, "_console"
      endif
    endif
  endif

  warn "dosemu running on ", $BEING_ON;

  if ( ($BEING_ON ne "console") && (!$USING_X) )
    $DISABLE_MOUSE = (1)
    $xxx = $_term_char_set
    if ($xxx eq "")
       $xxx = "latin"
       if (strstr($BEING_ON, "_console") >= 0)
         $xxx = "ibm"
       endif
    endif
    if ($_term_color) $_term_color = "on" else $_term_color = "off" endif
    terminal { charset $$xxx  updatefreq $_term_updfreq  escchar $_escchar
               color $$_term_color }
  endif

  ## host checking. Naah, we won't let all in ;-)

  ## first: logged in hosts
  if (strlen($REMOTE_HOST) && strlen($_odd_hosts))
    foreach $xxx ($LIST_DELIM,$_odd_hosts)
      if ( ! strncmp($xxx, $REMOTE_HOST, strlen($REMOTE_HOST)))
        abort "Sorry, your host is on the blacklist"
      endif
    done
  endif
  ## second: hosts on diskless machines, that aren't allowed
  if (strlen($_diskless_hosts))
    foreach $xxx ($LIST_DELIM, $_diskless_hosts)
      if ( ! strncmp($xxx, $DOSEMU_HOST, strlen($DOSEMU_HOST)))
        abort "Sorry, your host is on the blacklist"
      endif
    done
  endif

  ## X param settings

  if ( $USING_X || (strchr($DOSEMU_OPTIONS,"L") >0) )
    # running as xdos or DEXE (which may force X later)
    if ($_X_keycode) $_X_keycode = "keycode" else $_X_keycode = "" endif
    if ($_X_sharecmap) $_X_sharecmap = "sharecmap" else $_X_sharecmap = "" endif
    if ($_X_aspect_43) $_X_aspect_43 = "aspect_43" else $_X_aspect_43 = "" endif
    if ($_X_lin_filt) $_X_lin_filt = "lin_filt" else $_X_lin_filt = "" endif
    if ($_X_bilin_filt) $_X_bilin_filt = "bilin_filt" else $_X_bilin_filt = "" endif
    $_X_gamma = "gamma ", (int($_X_gamma * 100))
    if (strlen($_X_font)) $_X_font = "font ", $_X_font endif

    if (strlen($_X_winsize))
      $xxx = strstr($_X_winsize,", ")
      $_X_winsize = "winsize (", strdel($_X_winsize,$xxx,999), ") , (",
                    strsplit($_X_winsize,$xxx+1,999), ")"
    endif

    $xxx = $_X_vesamode
    $_X_vesamode = ""
    if (strlen($xxx))
      foreach $yyy (" 	", $xxx)
        $zzz = strchr($yyy,",")
        $_X_vesamode = "vesamode (", strdel($yyy,$zzz,999), "),(",
                      strsplit($yyy,$zzz+1,999), ") "
      done
    endif
    X { 
      title $_X_title icon_name $_X_icon_name
      updatefreq $_X_updfreq blinkrate $_X_blinkrate
      fixed_aspect $_X_fixed_aspect vgaemu_memsize $_X_vgaemu_memsize
      lfb $_X_lfb  pm_interface $_X_pm_interface
      $$_X_keycode $$_X_sharecmap $$_X_aspect_43 $$_X_lin_filt $$_X_bilin_filt
      $$_X_font $$_X_winsize $$_X_gamma
      $$_X_vesamode
    };
  endif

  ifdef guest
    ## /etc/dosemu.users defined 'guest' for this login
    define restricted		# force restricted setting
    $_hogthreshold = (1)	# force 'nice'
    $_rawkeyboard = (off)	# force normal keyboard
    if ($BEING_ON eq "console") video { vga } endif
    sound_emu off
    $DISABLE_MOUSE = (1)
    $DISABLE_SERIAL = (1)
  else
    ## other then guest
    # video settings
    if ($BEING_ON eq "console")
      if (!strlen($_video)) $_video = "plainvga" endif
      if ($_console) $_console = "console" else $_console = "" endif
      if ($_graphics)
        $_graphics = "graphics"
        $_console = "console"
        $_vbios_seg = "vbios_seg ", ($_vbios_seg)
        $_vbios_size = "vbios_size ", ($_vbios_size)
        $_vmemsize = "memsize ", ($_vmemsize)
      else
        $_graphics = ""; $_vbios_seg = ""; $_vbios_size = ""; $_vmemsize = ""
      endif
      if (strlen($_chipset)) $_chipset = "chipset ",$_chipset endif
      if ($_dualmon) $_dualmon = "dualmon" else $_dualmon = "" endif
      video {
        $$_video $$_console $$_graphics $$_chipset
        $$_vbios_seg  $$_vbios_size $$_vmemsize $$_dualmon
      }
    endif

    ## sound settings
    if ($_sound)
      sound_emu { sb_base $_sb_base  sb_irq $_sb_irq  sb_dma $_sb_dma
                  sb_mixer $_sb_mixer  mpu_base $_mpu_base }
    else
      sound_emu off
    endif

    ## serial
    if ((!$DISABLE_SERIAL) && strlen($_com1))
      if ($_mouse_dev eq "com1")
        if (!$DISABLE_MOUSE) serial { mouse com 1 device $_com1 } endif
        $_mouse = ""
      else
        serial { com 1 device $_com1 }
      endif
    endif
    if ((!$DISABLE_SERIAL) && strlen($_com2))
      if ($_mouse_dev eq "com2")
        if (!$DISABLE_MOUSE) serial { mouse com 2 device $_com1 } endif
        $_mouse = ""
      else
        serial { com 2 device $_com2 }
      endif
    endif

    ## mouse settings
    if ((!$DISABLE_MOUSE) && strlen($_mouse) && (strstr($_mouse_dev,"com")<0))
      if ($_mouse_baud)
        $_mouse_baud = "baudrate ", $_mouse_baud
      else
        $_mouse_baud = ""
      endif
      if (strlen($_mouse_dev))
        $_mouse_dev = "device ", $_mouse_dev, " internaldriver"
      endif
      mouse { $$_mouse $$_mouse_dev $$_mouse_flags $$_mouse_baud }
    endif

  endif # end 'not guest'

  hogthreshold $_hogthreshold

  ## keyboard setting
  if ($BEING_ON ne "console") $_rawkeyboard = (off) endif
  if (strlen($_layout)) $_layout = "layout ",$_layout
  else $_layout = "layout us"  endif
  keyboard {  $$_layout  keybint $_keybint  rawkeyboard $_rawkeyboard }

  $_disks = ""
  ifdef restricted
    ## /etc/dosemu.users defined 'restricted' for this login
    define c_normal
    if (strchr($_secure,"d")>=0) dexe { secure } endif
    ifdef guest
      if (strchr($_secure,"g")>=0) secure on  endif
    else
      if (strchr($_secure,"n")>=0) secure on  endif
      $_disks = $_hdimage_r
    endif
    dpmi off
    speaker emulated
    ipxsupport off
    printer { options "%s"  command "lpr"  timeout 20 }
  else
    ## /etc/dosemu.users does allow full access for this login
    secure off
    dexe { allowdisk }
    if (!strlen($_vbootfloppy))
      bootC
      $_disks = $_hdimage
      if (strlen($_floppy_a)) floppy { device /dev/fd0 $$_floppy_a } endif
    else
      bootA
      $_vbootfloppy = "/var/lib/dosemu/", $_vbootfloppy
      floppy { heads 2  sectors 18  tracks 80 threeinch  file $_vbootfloppy }
    endif
    if (strlen($_floppy_b)) floppy { device /dev/fd1 $$_floppy_b } endif

    # misc stuff
    dpmi $_dpmi
    if (strlen($_irqpassing))
      foreach $xxx (" ", $_irqpassing)
        $xxx = "irqpassing { use_sigio ", $xxx, " }";
        $$xxx
      done
    else
      irqpassing off
    endif
    if (strlen($_speaker))
      $_speaker = "speaker ", $_speaker
      $$_speaker
    else
      speaker off
    endif
    ipxsupport $_ipxsupport
    if ($_novell_hack) pktdriver novell_hack  endif
    if (strlen($_printer))
      $_printer = "'-P", $_printer, " %s'";
      printer { options $$_printer  command "lpr"  timeout $_printer_timeout }
    endif
    if (strlen($_ports)) ports { $$_ports } endif
  endif

  ## setting up hdimages
  if (strlen($_disks) && (!defined(c_dexerun)))
    foreach $xxx ($LIST_DELIM, $_disks)
      $xxx = "/var/lib/dosemu/", $xxx
      disk { image $xxx }
    done
  endif

  ## define the allowed classes for subsequent .dosrc and -I parsing
  ifdef restricted
    undef c_all
    ifdef guest
      undef c_normal
      define c_dexe
      define c_nice
      define c_x
    endif
  endif

endif
#############################################################################
